<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- HTTP security configurations -->
    <http auto-config="true" use-expressions="true">
    	<form-login login-processing-url="/static/j_spring_security_check" login-page="/login" authentication-failure-url="/login?login_error=t"/>
        <custom-filter ref="openhdsUserCheckFilter" after="FORM_LOGIN_FILTER" />
        <logout logout-url="/static/j_spring_security_logout"/>
        
        <!-- Configure these elements to secure URIs in your application -->
        <intercept-url pattern="/choice/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/socialgroup/**" access="isAuthenticated()" />
        <intercept-url pattern="/individual/**" access="isAuthenticated()" />
        <intercept-url pattern="/visit/**" access="isAuthenticated()" />
        <intercept-url pattern="/location/**" access="isAuthenticated()" />
        <intercept-url pattern="/resources/**" access="permitAll" />
        <intercept-url pattern="/static/**" access="permitAll" />
        <intercept-url pattern="/**" access="permitAll" />
    </http>
    
    <beans:bean id="sessionAuthenticationStrategy" class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy" />
    
    <beans:bean id="openhdsUserCheckFilter" class="org.openhds.specialstudy.security.OpenHdsUserCheckFilter">
    	<beans:constructor-arg ref="openHdsUserDao" />
    	<beans:property name="sessionAuthenticationStrategy" ref="sessionAuthenticationStrategy" />
    	<beans:property name="authenticationManager" ref="authenticationManager" />
    </beans:bean>

	<beans:bean name="customAuthenticationProvider" class="org.openhds.specialstudy.security.CustomAuthenticationProvider" />
	
	<!-- Configure Authentication mechanism -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="customAuthenticationProvider"/>
	</authentication-manager>

</beans:beans>